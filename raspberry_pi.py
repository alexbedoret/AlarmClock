#!/usr/bin/python

import time
import datetime
from Adafruit_8x8 import EightByEight

# ===========================================================================
# 8x8 Pixel Example
# ===========================================================================
matrix_0 = EightByEight(address=0x70)
matrix_1 = EightByEight(address=0x72)
matrix_2 = EightByEight(address=0x71)
matrix_3 = EightByEight(address=0x74)
data = [0,7,7,3,0,6,6,3,0,5,5,3,0,4,4,3,0,3,3,3,0,2,2,3,0,1,1,3,0,0,0,3,1,7,7,3,1,6,6,3,1,5,5,3,1,4,4,3,1,3,3,3,1,2,2,3,1,1,1,3,1,0,0,3,2,7,7,3,2,6,6,3,2,5,5,3,2,4,4,3,2,3,3,3,2,2,2,3,2,1,1,3,2,0,0,3,3,7,7,3,3,6,6,3,3,5,5,3,3,4,4,3,3,3,3,3,3,2,2,3,3,1,1,3,3,0,0,3,0,7,7,3,0,6,6,3,0,5,5,3,0,4,4,3,0,3,3,3,0,2,2,3,0,1,1,3,0,0,0,3,1,7,7,3,1,6,6,3,1,5,5,3,1,4,4,3,1,3,3,3,1,2,2,3,1,1,1,1,1,0,0,1,2,7,7,3,2,6,6,1,2,5,5,1,2,4,4,3,2,3,3,3,2,2,2,3,2,1,1,3,2,0,0,3,3,7,7,3,3,6,6,3,3,5,5,3,3,4,4,3,3,3,3,3,3,2,2,3,3,1,1,3,3,0,0,3,0,7,7,3,0,6,6,3,0,5,5,3,0,4,4,3,0,3,3,3,0,2,2,3,0,1,1,3,0,0,0,3,1,7,7,3,1,6,6,3,1,5,5,3,1,4,4,3,1,3,3,3,1,2,2,1,1,1,1,4,1,0,0,4,2,7,7,1,2,6,6,4,2,5,5,4,2,4,4,1,2,3,3,3,2,2,2,3,2,1,1,3,2,0,0,3,3,7,7,3,3,6,6,3,3,5,5,3,3,4,4,3,3,3,3,3,3,2,2,3,3,1,1,3,3,0,0,3,0,7,7,3,0,6,6,3,0,5,5,3,0,4,4,3,0,3,3,3,0,2,2,3,0,1,1,3,0,0,0,3,1,7,7,3,1,6,6,3,1,5,5,3,1,4,4,3,1,3,3,3,1,2,2,1,1,1,1,4,1,0,0,4,2,7,7,4,2,6,6,4,2,5,5,4,2,4,4,1,2,3,3,3,2,2,2,3,2,1,1,3,2,0,0,3,3,7,7,3,3,6,6,3,3,5,5,3,3,4,4,3,3,3,3,3,3,2,2,3,3,1,1,3,3,0,0,3,0,7,7,3,0,6,6,3,0,5,5,3,0,4,4,3,0,3,3,3,0,2,2,3,0,1,1,3,0,0,0,3,1,7,7,3,1,6,6,3,1,5,5,3,1,4,4,3,1,3,3,3,1,2,2,3,1,1,1,1,1,0,0,4,2,7,7,4,2,6,6,4,2,5,5,1,2,4,4,3,2,3,3,3,2,2,2,3,2,1,1,3,2,0,0,3,3,7,7,3,3,6,6,3,3,5,5,3,3,4,4,3,3,3,3,3,3,2,2,3,3,1,1,3,3,0,0,3,0,7,7,3,0,6,6,3,0,5,5,3,0,4,4,3,0,3,3,3,0,2,2,3,0,1,1,3,0,0,0,3,1,7,7,3,1,6,6,3,1,5,5,3,1,4,4,3,1,3,3,3,1,2,2,3,1,1,1,3,1,0,0,1,2,7,7,4,2,6,6,1,2,5,5,3,2,4,4,3,2,3,3,3,2,2,2,3,2,1,1,3,2,0,0,3,3,7,7,3,3,6,6,3,3,5,5,3,3,4,4,3,3,3,3,3,3,2,2,3,3,1,1,3,3,0,0,3,0,7,7,3,0,6,6,3,0,5,5,3,0,4,4,3,0,3,3,3,0,2,2,3,0,1,1,3,0,0,0,3,1,7,7,3,1,6,6,3,1,5,5,3,1,4,4,3,1,3,3,3,1,2,2,3,1,1,1,3,1,0,0,3,2,7,7,1,2,6,6,3,2,5,5,3,2,4,4,3,2,3,3,3,2,2,2,3,2,1,1,3,2,0,0,3,3,7,7,3,3,6,6,3,3,5,5,3,3,4,4,3,3,3,3,3,3,2,2,3,3,1,1,3,3,0,0,3,0,7,7,3,0,6,6,3,0,5,5,3,0,4,4,3,0,3,3,3,0,2,2,3,0,1,1,3,0,0,0,3,1,7,7,3,1,6,6,3,1,5,5,3,1,4,4,3,1,3,3,3,1,2,2,3,1,1,1,3,1,0,0,3,2,7,7,3,2,6,6,3,2,5,5,3,2,4,4,3,2,3,3,3,2,2,2,3,2,1,1,3,2,0,0,3,3,7,7,3,3,6,6,3,3,5,5,3,3,4,4,3,3,3,3,3,3,2,2,3,3,1,1,3,3,0,0,3]
size = len(data)
i = 0
print "Press CTRL+Z to exit"

# Continually update the 8x8 display one pixel at a time
while(True):  
  if i == size:
    i = 0

  value = data[i]
  i+=1

  matrix  = value
  value   = data[i]
  i+=1
  column  = value
  value   = data[i]
  i+=1
  row     = value
  value   = data[i]
  i+=1
  led     = value

  color = led
      
  if matrix == 0:
    matrix_0.setBicolorPixel(column,row,0)
    matrix_0.setBicolorPixel(column,row,color)

  if matrix == 1:
    matrix_1.setBicolorPixel(column,row,0)
    matrix_1.setBicolorPixel(column,row,color)

  if matrix == 2:
    matrix_2.setBicolorPixel(column,row,0)
    matrix_2.setBicolorPixel(column,row,color)

  if matrix == 3:
    matrix_3.setBicolorPixel(column,row,0)
    matrix_3.setBicolorPixel(column,row,color)
